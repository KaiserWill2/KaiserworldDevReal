on_actions = {
	# country 
	on_new_term_election = {
		random_events = {
			100 = election.1
		}
	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
	}

	# country, FROM = ace, PREV = enemy ace 
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
	}
	
	# country, FROM = our ace, 
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
	}

	# country, FROM = our ace, 
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
	}

	# country, FROM = ace
	on_ace_killed = {
		random_events = {
		}
	}
    
    # our ace died in accident
	# country, FROM = ace
	on_ace_killed_on_accident = {
	
	}
    
    # enemy ace is killed by our non name
	# country, FROM = enemy ace
	on_non_ace_killed_other_ace = {
	
	}

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {
		random_events = {
		}
	}

	on_wargoal_expire = {
	}

	#FROM is state #ROOT is broken as hell
	on_nuke_drop = {
	}

	on_border_war_lost = {
		effect = {
		}
	}
	
	on_leave_faction = {
		effect = {
			PREV = {
				add_opinion_modifier = {
					modifier = faction_traitor
					target = ROOT
					days = 365
				}
			
				add_opinion_modifier = {
					modifier = faction_traitor_trade
					target = ROOT
					days = 365
				}
			}
		}
	}

	#PREV is the one that joins the faction
	on_create_faction = {
		effect = {
		}
	}

	#PREV is country getting invited. #FROM in the add_to_faction effect because that's the scope you should use...
	on_offer_join_faction = {
		effect = {
		}
	}

	#PREV is faction leader on join faction requests.
	on_join_faction = {
		effect = {
		}
	}

	#PREV is war target
	on_declare_war = {
		effect = {
		}
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {
		}
	}
	
	
	#ROOT is winner #FROM gets annexed
	
	on_weekly = {
		effect = {
			country_event = limiter.1
		
		}
	}
	
	on_unit_leader_created = {
		effect = {
		}
	}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {
		}
	}
	
	on_unit_leader_level_up = {
		effect = {
			
		}
	}
	
	# From is owner country
	on_army_leader_daily = {
		effect = {
		}
	}
	
	# From is owner country
	on_army_leader_won_combat = {
		effect = {
		}
	}
	
	# From is owner country
	on_army_leader_lost_combat = {
		effect = {
		}
	}
	
	on_army_leader_promoted = {
		effect = {
			add_timed_unit_leader_trait = {
				trait = recently_promoted
				days = 100
			}
		}
	}
	
	# root country that invades
	# scope state that is invaded
	# from scope state that the invasion started
	# on_naval_invasion = {
	# 	effect = {
	# 	}
	# }
	
	
	# root country that paradrops
	# scope state that is paradroped into
	# from scope state that the paradrop started
	on_paradrop = {
	    effect = {
		    set_country_flag = has_paradropped_flag
		}
	}
	on_ruling_party_change = { 
		# temp var old_ideology_token is available for effects
		effect = {
			every_controlled_state = {
				limit = {
					has_resistance = yes
				}
				set_temp_variable = { new_compliance = compliance }
				multiply_temp_variable = { new_compliance = 0.5 }
				set_compliance = new_compliance
			}
		}
	}
}
